# -*- coding: utf-8 -*-
"""
Created on Tue Aug 31 13:06:23 2021

@author: 李可豪
"""

'''
RSA加密算法
非对称密钥: 有两个密钥，一个加密一个解密, 若两个密钥一样为对称加密。
原理: 选两个质数p, q, 计算n = p*q; 选取一个与f(n)互质的小奇数e, f(n)=(p-1)*(q-1)
     找到一个d使 (e*d) mod f(n) = 1, mod为余数, 这个d可证明是唯一的, 求d的过程用到了扩展欧几里得算法
     公钥(e,n)， 密钥(d,n)
     加密过程: c = (m ^ e) mod n, c为密文, m为明文, 任何内容在计算机内都是01, 这个01流可以变成一个整数
     解密过程: m = (c ^ d) mod n
     因为：
     密文c已知, 公钥(e, n)已知, 要知道d得直到f(n), 而f(n)是两个质数乘积相关, 
'''
p, q = 53, 59
n = p * q
f_n = (p-1) * (q-1)
f_n
e = 3
f_n / e
d = 2011 #满足条件的d唯一
(e*d) % f_n
print('公钥为%d, %d' % (e, n))
print('密钥为%d, %d' % (d, n))
m = 87
print('明文加密为密文c: (m^e) mod n = %d' % (87**e % n))
print('密文解密为明文m: (1833^d) mod n = %d' % (1833**d % n))
